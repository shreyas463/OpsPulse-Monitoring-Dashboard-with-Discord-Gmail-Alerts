name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: app/package-lock.json
    
    - name: Install dependencies
      working-directory: ./app
      run: npm ci
    
    - name: Run linting
      working-directory: ./app
      run: npm run lint
    
    - name: Run type checking
      working-directory: ./app
      run: npm run type-check
    
    - name: Run tests
      working-directory: ./app
      run: npm test
    
    - name: Build application
      working-directory: ./app
      run: npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      working-directory: ./app
      run: |
        docker build -t ops-pulse-app:latest .
    
    - name: Test Docker image
      run: |
        docker run --rm -d --name test-app -p 8080:8080 ops-pulse-app:latest
        sleep 10
        curl -f http://localhost:8080/health || exit 1
        docker stop test-app

  integration-test:
    runs-on: ubuntu-latest
    needs: docker-build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Docker Compose
      run: |
        cd ops
        docker compose up -d
        
        # Wait for services to be ready
        sleep 30
        
        # Test application health
        curl -f http://localhost:8080/health || exit 1
        
        # Test Prometheus metrics
        curl -f http://localhost:8080/metrics || exit 1
        
        # Test Prometheus is scraping
        sleep 15
        curl -f http://localhost:9090/api/v1/targets || exit 1
        
        # Test Grafana is accessible
        curl -f http://localhost:3000/api/health || exit 1
    
    - name: Cleanup
      if: always()
      run: |
        cd ops
        docker compose down -v 